{"version":3,"sources":["components/BookSearch.js","App.js","index.js"],"names":["BookSearch","_ref","contractAddress","console","log","bookId","setBookId","useState","book","setBook","_jsxs","children","_jsx","type","value","onChange","e","target","placeholder","onClick","async","provider","ethers","providers","Web3Provider","window","ethereum","contract","Contract","Library","abi","bookData","getBook","title","author","cid","uploader","App","UploadBook","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"wtoLAiDeA,MA5CIC,IAA0B,IAAzB,gBAAEC,GAAiBD,EACrCE,QAAQC,IAAI,iCACZ,MAAOC,EAAQC,GAAaC,mBAAS,KAC9BC,EAAMC,GAAWF,mBAAS,MAmBjC,OACEG,eAAA,OAAAC,SAAA,CACEC,cAAA,SACEC,KAAK,SACLC,MAAOT,EACPU,SAAWC,GAAMV,EAAUU,EAAEC,OAAOH,OACpCI,YAAY,kBAEdN,cAAA,UAAQO,QAzBMC,UAChB,MAAMC,EAAW,IAAIC,IAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAAW,IAAIL,IAAOM,SAC1B1B,EACA2B,EAAQC,IACRT,GAEIU,QAAiBJ,EAASK,QAAQ3B,GACxCI,EAAQ,CACNwB,MAAOF,EAAS,GAChBG,OAAQH,EAAS,GACjBI,IAAKJ,EAAS,GACdK,SAAUL,EAAS,IACnB,EAY2BpB,SAAC,WAC3BH,GACCE,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,kBACJD,eAAA,KAAAC,SAAA,CAAG,UAAQH,EAAKyB,SAChBvB,eAAA,KAAAC,SAAA,CAAG,WAASH,EAAK0B,UACjBxB,eAAA,KAAAC,SAAA,CAAG,QAAMH,EAAK2B,OACdzB,eAAA,KAAAC,SAAA,CAAG,gBAAcH,EAAK4B,iBAGtB,EC7BKC,MAZHA,IAIR3B,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,iBACJC,cAAC0B,WAAU,IACX1B,cAACZ,EAAU,CAACE,gBANQ,kDCA1BqC,IAASC,OACL5B,cAAC6B,IAAMC,WAAU,CAAA/B,SACbC,cAACyB,EAAG,MAERM,SAASC,eAAe,Q","file":"static/js/main.80f2a367.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\n// import Library from '../artifacts/contracts/Library.sol/Library.json';\nimport Library from \"../artifacts/Library.json\";\n\nconst BookSearch = ({ contractAddress }) => {\n  console.log(\"BookSearch component rendered\");\n  const [bookId, setBookId] = useState(\"\");\n  const [book, setBook] = useState(null);\n\n  const fetchBook = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const contract = new ethers.Contract(\n      contractAddress,\n      Library.abi,\n      provider\n    );\n    const bookData = await contract.getBook(bookId);\n    setBook({\n      title: bookData[0],\n      author: bookData[1],\n      cid: bookData[2],\n      uploader: bookData[3],\n    });\n  };\n  //\n\n  return (\n    <div>\n      <input\n        type=\"number\"\n        value={bookId}\n        onChange={(e) => setBookId(e.target.value)}\n        placeholder=\"Enter Book ID\"\n      />\n      <button onClick={fetchBook}>Search</button>\n      {book && (\n        <div>\n          <h3>Book Details:</h3>\n          <p>Title: {book.title}</p>\n          <p>Author: {book.author}</p>\n          <p>CID: {book.cid}</p>\n          <p>Uploaded by: {book.uploader}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BookSearch;\n","import React from \"react\";\nimport BookSearch from \"./components/BookSearch\";\nimport BookUpload from \"./components/BookUpload\";\n\nconst App = () => {\n  const contractAddress = \"0x1566481C4b58103AB8f86bFc544FcD034bEa79D4\"; // Replace with your deployed contract address\n\n  return (\n    <div>\n      <h1>IPFS Library</h1>\n      <UploadBook />\n      <BookSearch contractAddress={contractAddress} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import './index.css'; // 如果有样式文件\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}